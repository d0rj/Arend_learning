\data _Bool
  | true
  | false
  \where {
    \func if {A : \Type} (s : _Bool) (t e : A) : A \elim s
      | true => t
      | false => e

    \func not (b : _Bool) : _Bool \elim b
      | true => false
      | false => true

    \func \infixl 8 && (a b : _Bool) : _Bool \elim a
      | true => b
      | _ => false

    \func \infixl 7 || (a b : _Bool) : _Bool \elim a
      | true => true
      | false => b

    \func \infixl 7 xor (a b : _Bool) : _Bool \elim a
      | true => not b
      | false => b

    \func \infixl 6 --> (a b : _Bool) : _Bool \elim a, b
      | true, false => false
      | _, _ => true

    \func \infixl 5 == (a b : _Bool) : _Bool \elim a, b
      | true, true => true
      | false, false => true
      | _, _ => false
  }
